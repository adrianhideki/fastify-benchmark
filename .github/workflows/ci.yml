name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  filter-prisma:
    runs-on: ubuntu-latest
    outputs:
      prisma: ${{ steps.filter.outputs.prisma }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            prisma:
              - 'prisma/**'
              - '.github/workflows/migrate.yml'
  filter-src:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'src/**'
              - '.github/workflows/ci.yml'
              - 'Dockerfile'
              - 'package*.json'
              - 'tsconfig.json'
  filter-iac:
    runs-on: ubuntu-latest
    outputs:
      iac: ${{ steps.filter.outputs.iac }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            iac:
              - 'iac/**'
              - '.github/workflows/iac.yml'
  build:
    needs: [filter-src]
    if: needs.filter-src.outputs.src == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: npm run build --if-present
      - name: Use secret in a script
        run: echo "The secret is $GOOGLE_APPLICATION_CREDENTIALS"
  docker-build:
    needs: [filter-src]
    if: needs.filter-src.outputs.src == 'true'
    uses: ./.github/workflows/docker.yml
    with:
      environment: dev
      image-name: api
  iac:
    needs: [filter-iac]
    if: needs.filter-iac.outputs.iac == 'true'
    uses: ./.github/workflows/iac.yml
    with:
      environment: dev
    secrets: inherit
  migrate:
    needs: [filter-prisma]
    if: needs.filter-prisma.outputs.prisma == 'true'
    uses: ./.github/workflows/migrate.yml
    with:
      environment: dev
    secrets: inherit