name: Run Migration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true
      DATABASE_URL:
        required: true

jobs:
  migrate:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate with Google ðŸ”‘
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - id: secret
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |
            PASSWORD:projects/${{ vars.PROJECT_ID }}/secrets/${{ vars.NAME_PREFIX }}-sql-user-password-secret/versions/latest

      - name: Encode password for DATABASE_URL
        id: encode
        run: |
          echo "ENCODED_PASSWORD=$(node -p 'encodeURIComponent(process.env.PASSWORD)')" >> $GITHUB_OUTPUT
        env:
          PASSWORD: ${{ steps.secret.outputs.PASSWORD }}

      - name: Download SQL Auth Proxy
        run: "wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.16.0/cloud-sql-proxy.linux.amd64 -O cloud_sql_proxy"

      - name: Make the Cloud SQL Auth proxy executable
        run: "chmod +x cloud_sql_proxy"

      - name: Prints instance
        run: echo "$INSTANCE"
        env:
          INSTANCE: ${{ vars.INSTANCE_NAME }}

      - name: Start the Cloud SQL proxy
        run: ./cloud_sql_proxy $INSTANCE & sleep 5
        env:
          INSTANCE: ${{ vars.INSTANCE_NAME }}

      - name: Run migration
        run: "npx prisma migrate deploy"
        env:
          DATABASE_URL: "postgresql://${{ vars.NAME_PREFIX }}-user:${{ steps.encode.outputs.ENCODED_PASSWORD }}@127.0.0.1:5432/${{ vars.DATABASE_NAME }}?schema=${{ vars.SCHEMA_NAME }}"
